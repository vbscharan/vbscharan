Given an array of distinct elements. Find the third largest element in it.

Suppose you have A[] = {1, 2, 3, 4, 5, 6, 7}, its output will be 5 because it is the 3 largest element in the array A.

Example 1:

Input:
N = 5
A[] = {2,4,1,3,5}
Output: 3
Example 2:

Input:
N = 2
A[] = {10,2}
Output: -1
Your Task:
Complete the function thirdLargest() which takes the array a[] and the size of the array, n, as input parameters and returns the third largest element in the array. It return -1 if there are less than 3 elements in the given array.

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

Constraints:
1 ≤ N ≤ 105
1 ≤ A[i] ≤ 105




SOLUTION-1 (ONLY WORKS WHEN THERE ARE DISTINCT ELEMENTS IN ARRAY)
=============

int thirdLargest(int a[], int n)
    {
         int first=a[0],second=INT_MIN, third=INT_MIN;
         for(int i=1;i<n;i++)
         {
            if(a[i]>first)
            {
                third=second;
                second=first;
                first=a[i];
            }
            else if(a[i]>second)
            {
                third=second;
                second=a[i];
            }
            else if(a[i]>third)
            {
                third=a[i];
            }
         }
         return third;
    }


SOLUTION-2
==========

int secondLargest(int arr[], int n) {
    int largest = 0, secondLargest = -1, thirdLargest=-1;;
 
    // finding the largest element in the array
    for (int i = 1; i < n; i++) {
        if (arr[i] > arr[largest])
            largest = i;
    }
 
    // finding the largest element in the array excluding
    // the largest element calculated above
    for (int i = 0; i < n; i++) {
        if (arr[i] != arr[largest]) {
            // first change the value of second largest
            // as soon as the next element is found
            if (secondLargest == -1)
                secondLargest = i;
            else if (arr[i] > arr[secondLargest])
                secondLargest = i;
        }
     for (int i = 0; i < n; i++) {
        if (arr[i] != arr[secondlargest]) {
            if (thirdLargest == -1)
                thirdLargest = i;
            else if (arr[i] > arr[thirdLargest])
                thirdLargest = i;
        }
    }
    return thirdLargest;
}